<?xml version="1.0" encoding="UTF-8"?>
<results>
Checking GoFish/src/Card.cpp...
1/7 files checked 14% done
Checking GoFish/src/Deck.cpp...
2/7 files checked 28% done
Checking GoFish/src/Player.cpp...
    <error file="GoFish/src/Player.cpp" line="57" id="variableScope" severity="style" msg="The scope of the variable &apos;numMatched&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level."/>
    <error file="GoFish/include/Player.h" line="16" id="noExplicitConstructor" severity="style" msg="Class &apos;Player&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided."/>
    <error file="GoFish/src/Player.cpp" line="23" id="passedByValue" severity="style" msg="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++."/>
3/7 files checked 42% done
Checking GoFish/src/main.cpp...
4/7 files checked 57% done
Checking GoFish/test/TestCard.cpp...
5/7 files checked 71% done
Checking GoFish/test/TestDeck.cpp...
6/7 files checked 85% done
Checking GoFish/test/TestPlayer.cpp...
    <error file="GoFish/test/TestPlayer.h" line="71" id="unsafeClassCanLeak" severity="style" msg="The class &apos;TestPlayer&apos; is unsafe, wrong usage can cause memory/resource leaks for &apos;TestPlayer::p6&apos;. This can for instance be fixed by adding proper cleanup in the destructor."/>
7/7 files checked 100% done
</results>
